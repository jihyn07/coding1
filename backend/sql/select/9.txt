[SELECT문: SQL의 꽃 JOIN]

1. 수업준비 (순서대로) db명.테이블명
create table mysql.table_7th_student ( 
    student_id int(10) comment '학생번호',
    major_id int(10) comment '학과ID',
    bl_prfs_id int(10) comment '담당교수ID',
    name varchar(20) comment '학생이름',
    tel varchar(15) comment '학생연락처'
) character set utf8

create table mysql.table_7th_professor (
    prfs_id int(10) comment '교수ID',
    bl_major_id int(10) comment '소속학과ID',
    name varchar(20) comment '교수이름',
    tel varchar(15) comment '교수연락처'
) character set utf8

create table mysql.table_7th_major (
    major_id int(10) comment '학과ID',
    major_title varchar(30) comment '학과명',
    major_prfs_cnt int(5) comment '학과소속교수수',
    major_student_cnt int(5) comment '학과소속학생수',
    tel varchar(15) comment '학과사무실연락처'
) character set utf8

INSERT INTO mysql.table_7th_student (student_id, major_id, bl_prfs_id, name, tel) VALUES (1001, 9901, 7029901, '한지호', '01098447362')
,(1002, 9902, 7029902, '김은숙', '01023456787')
,(1003, 9903, 7039903, '강경호', '01092938476')
,(1004, 9904, 7049904, '민현민', '01088786623')
,(1005, 9905, 7059905, '조승우', '01092877795')
,(1006, 9901, 7069901, '이남철', '01045671234')
,(1007, 9902, 7079902, '이강철', '01021213434')
,(1008, 9903, 7089903, '조민수', '01098937262')
,(1009, 9904, 7099904, '박찬경', '01029884432')
,(1010, 9905, 7109905, '이도경', '01029385647')
,(1011, 9901, 7019901, '이만호', '01099996453')
,(1012, 9902, 7029902, '김효민', '01092887666')
,(1013, 9903, 7039903, '최효성', '01098999933')
,(1014, 9904, 7049904, '우민국', '01087651112')
,(1015, 9905, 7059905, '지대한', '01093934848')
,(1016, 9901, 7069901, '한나름', '01023329882')
,(1017, 9902, 7079902, '유육경', '01099881111')
,(1018, 9903, 7089903, '조민경', '01023311120')
,(1019, 9904, 7099904, '경지수', '01029100293')
,(1020, 9905, 7109905, '오종환', '01098882226')
,(1021, 9901, 7019901, '조형민', '01098909876')
,(1022, 9902, 7029902, '이수강', '01099992222')
,(1023, 9903, 7039903, '서민호', '01092997654')
,(1024, 9904, 7049904, '박효숙', '01022293332')
,(1025, 9905, 7059905, '남궁옥경', '01099938475')
,(1026, 9901, 7069901, '피경남', '01029222233')
,(1027, 9902, 7079902, '고주경', '01099226655')
,(1028, 9903, 7089903, '하지만', '01022228965')
,(1029, 9904, 7099904, '기지효', '01012090912')
,(1030, 9905, 7109905, '박민호', '01074746363')
,(1031, 9901, null, '신채령', '01044755564')
,(1032, 9902, null, '이만도', '01022287777') 
,(1033, 9903, null, '박만호', '01099972253') 
,(1034, 9904, null, '최이강', '01029386577') 
,(1035, 9905, null, '강이민', '01033334444') 
,(1036, 9901, null, '민형도', '01099973331') 
,(1037, 9902, null, '도지란', '01055567774')

INSERT INTO mysql.table_7th_professor (prfs_id, bl_major_id, name, tel) VALUES (7019901, 9901, '김보경', '023445678')
,(7029902, 9902, '조숙', '023446789')
,(7039903, 9903, '이호', '023449584')
,(7049904, 9904, '박철남', '023449588')
,(7059905, 9905, '이만기', '023443443')
,(7069901, 9901, '강조교', '023449994')
,(7079902, 9902, '이희숙', '023443321')
,(7089903, 9903, '소머리', '023440123')
,(7099904, 9904, '두수위', '023443327')
,(7109905, 9905, '지만래', '023449995')

INSERT INTO mysql.table_7th_major (major_id, major_title, major_prfs_cnt, major_student_cnt, tel) VALUES (9901, '컴퓨터공학과', 7, 123, '023454321')
,(9902, '아동보육학과', 8, 345, '023456676')
,(9903, '국문학과', 6, 213, '023456567')
,(9904, '경제학과', 5, 432, '023456987')
,(9905, '사회복지학과', 9, 312, '023454534')







1. 데이터조회하기
1) join이란 무엇인가?
[그림] 11_1.png

2) Inner join (Equi join) : 
정의 : 
보편적인 Join으로, 
Inner Join은 A, B 두 테이블이 있을 때 서로 연결되는 key값이 "같은" 데이터를 가지고 와서 출력
[그림] 11_2.png

예시 : 
select * from mysql.table_7th_major

select * from mysql.table_7th_professor

그리고 교수 테이블을 보면 bl_major_id라는 소속 전공 아이디가 있습니다. 
이 소속 전공 아이디는 전공 테이블의 major_id와 매핑이 됩니다.
이것을 FK, Foreign Key라고 합니다. 
두 테이블의 연결하는 key가 되는 것입니다. 
이 FK를 join 시에 조건으로 넣어주시면 됩니다.

select p.name, m.major_title
     from mysql.table_7th_professor p , mysql.table_7th_major m
     where p.bl_major_id = m.major_id

두 테이블을 inner join 하여 교수 이름과, 전공명이 출력되도록 했습니다.
              
select p.name, m.major_title
    from mysql.table_7th_professor p 
    inner join mysql.table_7th_major m
    on p.bl_major_id = m.major_id

3) 다중 Inner join (Equi join) : 
예시 : 
select s.name, p.name, m.major_title
    from mysql.table_7th_student s, mysql.table_7th_major m, mysql.table_7th_professor p
    where s.bl_prfs_id = p.prfs_id
    and p.bl_major_id = m.major_id

학생, 교수, 전공 3개의 테이블을 한 번에 inner join을 하여 각 학생별 담당교수와 소속 전공까지 출력합니다.
